body{
    text-align: center;
}
/*Ejercicio completo-----*/
#website *{
    margin: 0px;
    padding: 0px;
}
#website{
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: 150px 70px 1fr 70px;
    width: 75%;
    height: 1000px;
    margin: 0px auto;
    border: 1px solid #ccc;
}
#cabecera{ /*Centrando el contenido de la caja se tiene que utilizar flex*/
    display: flex;
    justify-content: center;
    align-items: center;

    grid-column: 1 / 6;
    background: blue;
    color: white;
}
#menu{
   
    grid-column: 1 / 6;
    background: lightblue;
    color: black;
    line-height: 70px;
}
#menu ul{
    display: grid;
    grid-template-columns: repeat(9, 1fr);
    list-style: none;
}
#contenido{
    grid-column: 1 / 5;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 25px;
    padding: 20px;
    background: #eee;
    
}
#contenido article{
    background: #ccc;
    border: 1 px solid #555;
}
#lateral{
    grid-column: 5 / 6;
    background: orange;
    color: white;
}
#pie-pagina{
    grid-column: 1 / 6;
    background: black;
    color: white;
}

/*---- Ejemplos-------------*/

.layout{
    width: 80%;
    height: 400px;
    margin: 0px auto;
    /*Definir el grid layout*/
    display: grid;
    /*Para darle tama√±o a las cajas hay diferentes formas: grid-template-columns: 50% 45%;
     grid-template-columns: repeat(4, calc(25% - 10px));grid-template-columns: repeat(2, 1fr); grid-template-columns: 1fr 1fr 1fr;*/
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows:repeat(2, 1fr) 3fr repeat(2, 1fr);
    /*Espacio entre elementos grid*/
    grid-gap: 10px;
    padding: 10px;
    border:3px solid orangered;
}

.layout .caja{
    font-size: 20px;
    font-weight: bold;
    color: white;
    padding: 20px;
    border: 4px solid #222;
    background: gray;
}
.layout .red{
    /*Con esta propiedad le indicamos la cantidad de columnas que ocupara*/
    grid-column-start: 1;
    grid-column-end: 4;
    background: red;
}
.layout .green{
    grid-row-start: 2;
    grid-row-end: 6;
    background: green;
}
.layout .blue{
    grid-column: 2 / 4;
    background: blue;
}
.layout .pink{
    /*grid-column-start: 1;
    grid-column-end: 3; Con la propiedad de abajo podemos resumir estas dos propiedades*/
    grid-column: 2 / 3;
    grid-row: 3 / 5;
    background: pink;
}
.layout .yellow{
    grid-row: 3 / 5;

    background: yellow;
}
.layout .black{
    grid-column: 2 / 4;
    background: black;
}